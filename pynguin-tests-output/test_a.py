# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import a as module_0


def test_case_0():
    bool_0 = False
    str_0 = module_0.triangle(bool_0, bool_0, bool_0)
    assert str_0 == "Equilateral triangle"


def test_case_1():
    bool_0 = False
    none_type_0 = None
    int_0 = -4160
    str_0 = module_0.triangle(bool_0, none_type_0, int_0)
    assert str_0 == "Scalene triangle"
    str_1 = module_0.triangle(str_0, bool_0, str_0)
    assert str_1 == "Isosceles triangle"


def test_case_2():
    none_type_0 = None
    bool_0 = False
    str_0 = module_0.triangle(bool_0, bool_0, none_type_0)
    assert str_0 == "Isosceles triangle"
    str_1 = module_0.triangle(none_type_0, none_type_0, none_type_0)
    assert str_1 == "Equilateral triangle"


def test_case_3():
    int_0 = -3729
    bool_0 = True
    str_0 = module_0.triangle(int_0, bool_0, bool_0)
    assert str_0 == "Isosceles triangle"
    none_type_0 = None
    bool_1 = False
    str_1 = module_0.triangle(int_0, none_type_0, bool_1)
    assert str_1 == "Scalene triangle"
    bytes_0 = b"\x84\x89\x1f\x97\xf5\x83\rR\x99R$\\xGW\x004\x92\xd1\xae"
    bool_2 = False
    str_2 = module_0.triangle(bool_2, str_1, none_type_0)
    assert str_2 == "Scalene triangle"
    str_3 = module_0.triangle(int_0, int_0, bytes_0)
    assert str_3 == "Isosceles triangle"
    str_4 = module_0.triangle(int_0, int_0, int_0)
    assert str_4 == "Equilateral triangle"
    str_5 = module_0.triangle(str_1, str_3, bool_2)
    assert str_5 == "Scalene triangle"
